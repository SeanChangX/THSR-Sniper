services:
  # Original CLI service for interactive usage
  thsr-sniper:
    build: .
    image: seanchangx/thsr-sniper:dev
    container_name: thsr-sniper
    environment:
      - PYTHONUNBUFFERED=1
      - DISPLAY=${DISPLAY:-:0}
      - TERM=xterm-256color
      - THSR_FORCE_INTERACTIVE=1  # Force interactive mode for pure CLI usage
    network_mode: host
    stdin_open: true
    tty: true
    command: bash
    restart: unless-stopped

  # Background scheduler service
  thsr-sniper-scheduler:
    build: .
    image: seanchangx/thsr-sniper:dev
    container_name: thsr-scheduler
    volumes:
      - thsr_data:/app/data
    environment:
      - PYTHONUNBUFFERED=1
      - TERM=xterm-256color
    restart: unless-stopped
    command: python watchdog.py
    networks:
      - thsr-network

  # THSR Booking API service
  thsr-sniper-api:
    build: .
    image: seanchangx/thsr-sniper:dev
    container_name: thsr-api
    ports:
      - "8000:8000"
    volumes:
      - thsr_data:/app/data
      - ./thsr_py:/app/thsr_py  # Mount source code for development
    environment:
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    command: python main.py --start-api --api-host 0.0.0.0 --api-port 8000
    networks:
      - thsr-network
    depends_on:
      - thsr-sniper-scheduler

  # Authentication service
  thsr-sniper-auth:
    build: ./auth_service
    image: seanchangx/thsr-sniper-auth:latest
    container_name: thsr-auth
    ports:
      - "8001:8001"
    volumes:
      - thsr_data:/app/data
      - ./auth_service:/app  # Mount source code for development
    environment:
      - PYTHONUNBUFFERED=1
      - SECRET_KEY=${SECRET_KEY}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
    restart: unless-stopped
    command: python auth_api.py
    networks:
      - thsr-network
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8001/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Development React frontend with Vite hot reload
  thsr-sniper-frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    image: seanchangx/thsr-sniper-frontend:dev
    container_name: thsr-frontend-dev
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=/api
      - VITE_AUTH_URL=/auth
    restart: unless-stopped
    networks:
      - thsr-network
    depends_on:
      - thsr-sniper-api
      - thsr-sniper-auth

volumes:
  thsr_data:
    driver: local

networks:
  thsr-network:
    driver: bridge
