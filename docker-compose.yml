services:
  # Original CLI service for interactive usage
  thsr-sniper:
    build: .
    image: seanchangx/thsr-sniper:latest
    container_name: thsr-sniper
    environment:
      - PYTHONUNBUFFERED=1
      - DISPLAY=${DISPLAY:-:0}
      - TERM=xterm-256color
      - THSR_FORCE_INTERACTIVE=1  # Force interactive mode for pure CLI usage
    stdin_open: true
    tty: true
    command: bash
    restart: unless-stopped
    networks:
      - default

  # Background scheduler service
  thsr-sniper-scheduler:
    build: .
    image: seanchangx/thsr-sniper:latest
    container_name: thsr-sniper-scheduler
    volumes:
      - data:/app/data
    environment:
      - PYTHONUNBUFFERED=1
      - TERM=xterm-256color
    restart: unless-stopped
    command: python watchdog.py
    networks:
      - default

  # THSR Booking API service
  thsr-sniper-api:
    build: .
    image: seanchangx/thsr-sniper:latest
    container_name: thsr-sniper-api
    ports:
      - "8000:8000"
    volumes:
      - data:/app/data
    environment:
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    command: python main.py --start-api --api-host 0.0.0.0 --api-port 8000
    networks:
      - default
    depends_on:
      - thsr-sniper-scheduler

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: thsr-sniper-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-thsr_sniper_root}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-thsr_sniper}
      - MYSQL_USER=${MYSQL_USER:-user}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-password}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - default
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-thsr_sniper_root}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: thsr-sniper-phpmyadmin
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-thsr_sniper_root}
    ports:
      - "8080:80"
    networks:
      - default
    depends_on:
      - mysql
    restart: unless-stopped

  # Authentication service
  thsr-sniper-auth:
    build: ./auth_service
    image: seanchangx/thsr-sniper-auth:latest
    container_name: thsr-sniper-auth
    ports:
      - "8001:8001"
    volumes:
      - data:/app/data
    environment:
      - PYTHONUNBUFFERED=1
      - SECRET_KEY=${SECRET_KEY}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=${MYSQL_DATABASE:-thsr_sniper}
      - MYSQL_USER=${MYSQL_USER:-user}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-password}
    restart: unless-stopped
    command: python auth_api.py
    networks:
      - default
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8001/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # React frontend
  thsr-sniper-frontend:
    build: ./frontend
    image: seanchangx/thsr-sniper-frontend:latest
    container_name: thsr-sniper-frontend
    ports:
      - "3000:80"
    environment:
      - VITE_API_URL=http://localhost:8000
      - VITE_AUTH_URL=http://localhost:8001
    restart: unless-stopped
    networks:
      - default
    depends_on:
      - thsr-sniper-api
      - thsr-sniper-auth

volumes:
  data:
    driver: local
  mysql_data:
    driver: local

networks:
  default:
    driver: bridge
